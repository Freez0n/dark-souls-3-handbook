import sys
import os
from PySide6.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QLabel, QComboBox, QScrollArea, QFrame, QSlider, QPushButton
)
from PySide6.QtCore import Qt, QUrl, Slot
from PySide6.QtGui import QFont, QColor, QPalette, QPixmap
from PySide6.QtMultimedia import QMediaPlayer, QAudioOutput
from PySide6.QtMultimediaWidgets import QVideoWidget


tips = {
    "üî• –•—Ä–∞–º –û–≥–Ω—è": [
        {"text": "–ö–ª–∞—Å—Å ¬´–ù–∞–µ–º–Ω–∏–∫¬ª ‚Äî –æ–±–ª–∞–¥–∞–µ—Ç –ø–∞—Ä–Ω—ã–º–∏ —à–∞—à–∫–∞–º–∏ —Å —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º DPS –≤ –∏–≥—Ä–µ.", "media": "1.jpg", "type": "image"},
        {"text": "–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–≥—Ä–µ–±–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –æ–≥–Ω–µ–Ω–Ω—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç: –Ω–∞ —Ä–∞–Ω–Ω–∏—Ö –ª–æ–∫–∞—Ü–∏—è—Ö –º–Ω–æ–≥–æ –≤—Ä–∞–≥–æ–≤, —É—è–∑–≤–∏–º—ã—Ö –∫ –æ–≥–Ω–µ–Ω–Ω–æ–º—É —É—Ä–æ–Ω—É (–æ—Å–æ–±–µ–Ω–Ω–æ —á—ë—Ä–Ω—ã–µ –∂–∏–∂–µ–ø–æ–¥–æ–±–Ω—ã–µ –º–æ–Ω—Å—Ç—Ä—ã).", "media": "2.jpg", "type": "image"},
        {"text": "–ù–µ –±–æ–π—Ç–µ—Å—å —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–π —è—â–µ—Ä–∫–æ–π ‚Äî –µ—ë —Å—Ç–æ–∏—Ç —É–±–∏—Ç—å —Ä–∞–¥–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥—É—à.", "media": "3.mp4", "type": "video"},
        {"text": "–°—É–¥—å—é –ì—É–Ω–¥–∏—Ä–∞ –º–æ–∂–Ω–æ –∞—Ç–∞–∫–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–µ—á–∞ –∏–∑ –µ–≥–æ —Ç–µ–ª–∞ ‚Äî –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∂–¥–∞—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª–æ—Å–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è.", "media": "4.mp4", "type": "video"},
        {"text": "–ê—Ç–∞–∫–∏ –∞–ª–µ–±–∞—Ä–¥–æ–π –ì—É–Ω–¥–∏—Ä–∞ –º–æ–∂–Ω–æ –ø–∞—Ä–∏—Ä–æ–≤–∞—Ç—å.", "media": "5.mp4", "type": "video"},
        {"text": "–°–ª–µ–≤–∞ –æ—Ç –≤—Ö–æ–¥–∞ –≤ –•—Ä–∞–º –û–≥–Ω—è ‚Äî –ø–æ–ª—É–≥–æ–ª—ã–π –º—É–∂—á–∏–Ω–∞ —Å –∫–∞—Ç–∞–Ω–æ–π. –û–Ω –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å–ª–æ–∂–Ω—ã–º, –Ω–æ –µ–≥–æ, –µ—Å–ª–∏ –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è, –º–æ–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å —Å –æ–±—Ä—ã–≤–∞. –ï–≥–æ –∫–∞—Ç–∞–Ω–∞ ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ä—É–∂–∏–µ –∫–∞–∫ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã, —Ç–∞–∫ –∏ –≤–ø–ª–æ—Ç—å –¥–æ —Ñ–∏–Ω–∞–ª–∞.", "media": "6.png", "type": "image"},
        {"text": "–ù–∞ –∫—Ä—ã—à–µ –•—Ä–∞–º–∞ –û–≥–Ω—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ü–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π ¬´—Ç–æ—Ä–≥–æ–≤–µ—Ü¬ª. –ö–ª—é—á —Å—Ç–æ–∏—Ç 20 000 –¥—É—à, –Ω–æ –º–æ–∂–Ω–æ –∑–∞–ø–∞—Ä–∫—É—Ä–∏—Ç—å –Ω–∞ –∫—Ä—ã—à—É, –æ—Ç–ø—Ä—ã–≥–Ω—É–≤ –æ—Ç –¥–µ—Ä–µ–≤–∞ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –∑–∞–∫—Ä—ã—Ç–æ–π –¥–≤–µ—Ä–∏.", "media": "7.mp4", "type": "video"}
    ],
    "üè∞ –í—ã—Å–æ–∫–∞—è —Å—Ç–µ–Ω–∞ –õ–æ—Ç—Ä–∏–∫–∞": [
        {"text": "–°—Ä–∞–∑—É –Ω–∞–ø—Ä–∞–≤–æ –æ—Ç —Å—Ç–∞—Ä—Ç–∞ –ª–æ–∫–∞—Ü–∏–∏ ‚Äî –Ω–µ–±–æ–ª—å—à–∞—è —Å–µ–∫—Ü–∏—è —Å—Ç–µ–Ω—ã, –≥–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ª—É–∫. –û–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–≥–Ω–∞—Ç—å –≤–∏–≤–µ—Ä–Ω—É.", "media": "1_1.mp4", "type": "video"},
        {"text": "–ù–∞ –ø—É—Ç–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—Å—è –≤–∏–≤–µ—Ä–Ω–∞, –æ–≥–Ω—ë–º –±–ª–æ–∫–∏—Ä—É—é—â–∞—è –ø—Ä–æ—Ö–æ–¥. –ï—ë –¥—ã—Ö–∞–Ω–∏–µ –º–æ–∂–Ω–æ —Å–ø—Ä–æ–≤–æ—Ü–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å –≤ –±–∞—à–Ω—é, –≥–¥–µ —Å–∏–¥–∏—Ç –¥—Ä–∞–∫–æ–Ω."},
        {"text": "–í–Ω—É—Ç—Ä–∏ ‚Äî –µ—Å—Ç—å –º–∏–º–∏–∫ —Å –ì–ª—É–±–∏–Ω–Ω–æ–π —Å–µ–∫–∏—Ä–æ–π ‚Äî –æ–¥–Ω–∏–º –∏–∑ –Ω–µ–º–Ω–æ–≥–∏—Ö –æ—Ä—É–∂–∏–π —Å —É—Ä–æ–Ω–æ–º –¢—å–º–æ–π –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ. –û—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤ –±–æ—Å—Å–∞ –ª–æ–∫–∞—Ü–∏–∏."},
        {"text": "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ—Å—Ç—Ä–∞ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∏ –æ–±—Å—Ç—Ä–µ–ª—è–π—Ç–µ –≤–∏–≤–µ—Ä–Ω—É —Å—Ç—Ä–µ–ª–∞–º–∏ ‚Äî —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –æ–Ω–∞ —É–ª–µ—Ç–∏—Ç.", "media": "2_2.mp4", "type": "video"},
        {"text": "–í –ø–æ–¥–≤–∞–ª–µ –±–∞—à–Ω–∏ —Å –∫–æ—Å—Ç—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –°–µ—Ä–æ–∫—Ä—ã—Å ‚Äî –Ω–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü –¥–ª—è –•—Ä–∞–º–∞ –û–≥–Ω—è. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–π–¥–∏—Ç–µ –µ–≥–æ –∫–≤–µ—Å—Ç!"},
        {"text": "–ù–∞ –ª–æ–∫–∞—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –ü–æ–ª—ã–µ, –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–µ—Å—è –≤ —á—ë—Ä–Ω—ã—Ö –º–æ–Ω—Å—Ç—Ä–æ–≤ (–∫–∞–∫ –ì—É–Ω–¥–∏—Ä). –û–≥–Ω–µ–Ω–Ω—ã–π —É—Ä–æ–Ω —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Ö –æ–≥–ª—É—à–∞–µ—Ç."},
        {"text": "–†—ã—Ü–∞—Ä–µ–π —Å –∫–æ–ø—å—ë–º –ª–µ–≥–∫–æ –æ–±–æ–π—Ç–∏ —Å–∑–∞–¥–∏ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –±—ç–∫—Å—Ç–∞–±."},
        {"text": "–ü–æ—Å–ª–µ –ø–ª–æ—â–∞–¥–∏ —Å —Ñ–æ–Ω—Ç–∞–Ω–æ–º ‚Äî –∑–∞–π–¥–∏—Ç–µ –≤ –∑–∞–∫–æ—É–ª–æ–∫, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ª–∏—Ñ—Ç-—à–æ—Ä—Ç–∫–∞—Ç –¥–æ –ø–µ—Ä–≤–æ–≥–æ –∫–æ—Å—Ç—Ä–∞. –≠—Ç–æ —É–ø—Ä–æ—Å—Ç–∏—Ç –ø—É—Ç—å –∫ –±–æ—Å—Å—É.", "media": "3_3.mp4", "type": "video"},
        {"text": "–†—è–¥–æ–º —Å–æ –∑–¥–∞–Ω–∏–µ–º, –≥–¥–µ —Å–∏–¥–∏—Ç —Å—Ç–∞—Ä—É—Ö–∞, ‚Äî –∫—Ä–∞—Å–Ω–æ–≥–ª–∞–∑—ã–π —Ä—ã—Ü–∞—Ä—å. –ü—Ä–∏ –ø–æ–±–µ–¥–µ –æ–Ω –æ—Ç–¥–∞—Å—Ç –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç."}
    ],
    "‚ùÑÔ∏è –í–æ—Ä–¥—Ç –∏–∑ –•–æ–ª–æ–¥–Ω–æ–π –¥–æ–ª–∏–Ω—ã": [
        {"text": "–û–≥—Ä–æ–º–Ω—ã–π –∏ –Ω–µ–ø–æ–≤–æ—Ä–æ—Ç–ª–∏–≤—ã–π –±–æ—Å—Å. –£—è–∑–≤–∏–º –∫ —É—Ä–æ–Ω—É –¢—å–º–æ–π. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ì–ª—É–±–∏–Ω–Ω—É—é —Å–µ–∫–∏—Ä—É –Ω–∞–π–¥–µ–Ω—É—é —Ä–∞–Ω–µ–µ, –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —É—Ä–æ–Ω–∞."},
        {"text": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª–∏–Ω–Ω—ã–µ –∞—Ç–∞–∫–∏ —Å –¥—ã—Ö–∞–Ω–∏–µ–º: –∑–∞–±–µ–≥–∞–π—Ç–µ –∑–∞ –µ–≥–æ —Å–ø–∏–Ω—É –∏ –Ω–∞–Ω–æ—Å–∏—Ç–µ —É–¥–∞—Ä—ã.", "media": "4_4.mp4", "type": "video"}
    ]
}


class VideoPlayerWidget(QWidget):
    def __init__(self, video_path):
        super().__init__()
        self.video_path = video_path

        self.audio_output = QAudioOutput()
        self.media_player = QMediaPlayer()
        self.media_player.setAudioOutput(self.audio_output)

        self.video_widget = QVideoWidget()
        self.video_widget.setMinimumSize(800, 450)
        self.video_widget.setStyleSheet("background-color: #000;")

        self.media_player.setVideoOutput(self.video_widget)

        self.play_button = QPushButton("‚ñ∂Ô∏è")
        self.play_button.setFixedWidth(120)
        self.play_button.clicked.connect(self.toggle_playback)

        self.position_slider = QSlider(Qt.Horizontal)
        self.position_slider.setRange(0, 0)
        self.position_slider.sliderMoved.connect(self.set_position)

        self.volume_slider = QSlider(Qt.Horizontal)
        self.volume_slider.setRange(0, 100)
        self.volume_slider.setValue(80)
        self.volume_slider.setFixedWidth(80)
        self.volume_slider.valueChanged.connect(self.on_volume_changed)

        control_layout = QHBoxLayout()
        control_layout.addWidget(self.play_button)
        control_layout.addWidget(self.position_slider)
        control_layout.addWidget(QLabel("üîä"))
        control_layout.addWidget(self.volume_slider)

        layout = QVBoxLayout()
        layout.addWidget(self.video_widget)
        layout.addLayout(control_layout)
        self.setLayout(layout)

        self.media_player.positionChanged.connect(self.position_changed)
        self.media_player.durationChanged.connect(self.duration_changed)

        if os.path.exists(video_path):
            self.media_player.setSource(QUrl.fromLocalFile(video_path))
        else:
            self.play_button.setEnabled(False)
            self.video_widget.setStyleSheet("background-color: #333; color: #ff6666;")
            self.video_widget.setText("‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    @Slot()
    def on_volume_changed(self, value):
        self.audio_output.setVolume(value / 100.0)

    @Slot()
    def toggle_playback(self):
        if self.media_player.playbackState() == QMediaPlayer.PlayingState:
            self.media_player.pause()
            self.play_button.setText("‚ñ∂Ô∏è")
        else:
            self.media_player.play()
            self.play_button.setText("‚è∏Ô∏è")

    @Slot(int)
    def position_changed(self, position):
        self.position_slider.setValue(position)

    @Slot(int)
    def duration_changed(self, duration):
        self.position_slider.setRange(0, duration)

    @Slot(int)
    def set_position(self, position):
        self.media_player.setPosition(position)


class DarkSoulsGuideApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("üìñ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ Dark Souls III")
        self.resize(980, 900)

        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout(central_widget)

        title_label = QLabel("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ Dark Souls III")
        title_label.setAlignment(Qt.AlignCenter)
        title_label.setFont(QFont("Segoe UI", 18, QFont.Bold))
        title_label.setStyleSheet("color: #f0f0f0; margin: 10px;")
        main_layout.addWidget(title_label)

        location_layout = QHBoxLayout()
        location_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é:")
        location_label.setStyleSheet("color: #cccccc; font-size: 13px;")
        self.location_combo = QComboBox()
        self.location_combo.addItems(tips.keys())
        self.location_combo.currentTextChanged.connect(self.display_content)
        location_layout.addWidget(location_label)
        location_layout.addWidget(self.location_combo)
        location_layout.addStretch()
        main_layout.addLayout(location_layout)

        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setStyleSheet("QScrollArea { border: none; }")
        self.content_widget = QWidget()
        self.content_layout = QVBoxLayout(self.content_widget)
        self.content_layout.setAlignment(Qt.AlignTop)
        self.scroll_area.setWidget(self.content_widget)
        main_layout.addWidget(self.scroll_area)

        if tips:
            first_location = list(tips.keys())[0]
            self.location_combo.setCurrentText(first_location)
            self.display_content(first_location)

    def display_content(self, location):
        while self.content_layout.count():
            child = self.content_layout.takeAt(0)
            if child.widget():
                child.widget().deleteLater()

        if location in tips:
            for i, item in enumerate(tips[location], 1):
                # –¢–µ–∫—Å—Ç
                label = QLabel(f"{i}. {item['text']}")
                label.setWordWrap(True)
                label.setStyleSheet("color: #f0f0f0; font-size: 14px; padding: 8px 0; font-family: 'Segoe UI';")
                self.content_layout.addWidget(label)

                if "media" in item:
                    media_path = item["media"]
                    media_type = item.get("type", "image")
                    if media_type == "image":
                        self._add_image(media_path)
                    elif media_type == "video":
                        self._add_video(media_path)

    def _add_image(self, filename):
        if os.path.exists(filename):
            pixmap = QPixmap(filename)
            if not pixmap.isNull():
                scaled = pixmap.scaledToWidth(800, Qt.SmoothTransformation)
                img_label = QLabel()
                img_label.setPixmap(scaled)
                img_label.setAlignment(Qt.AlignCenter)
                img_label.setStyleSheet("margin: 10px 0;")
                self.content_layout.addWidget(img_label)
        else:
            warn = QLabel(f"‚ö†Ô∏è –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            warn.setStyleSheet("color: #ffaa00; font-style: italic; padding: 5px;")
            self.content_layout.addWidget(warn)

    def _add_video(self, filename):
        video_widget = VideoPlayerWidget(filename)
        video_widget.setStyleSheet("margin: 15px 0;")
        self.content_layout.addWidget(video_widget)


def apply_dark_theme(app):
    dark_palette = QPalette()
    dark_palette.setColor(QPalette.Window, QColor(30, 30, 30))
    dark_palette.setColor(QPalette.WindowText, Qt.white)
    dark_palette.setColor(QPalette.Base, QColor(45, 45, 45))
    dark_palette.setColor(QPalette.AlternateBase, QColor(53, 53, 53))
    dark_palette.setColor(QPalette.ToolTipBase, Qt.white)
    dark_palette.setColor(QPalette.ToolTipText, Qt.white)
    dark_palette.setColor(QPalette.Text, Qt.white)
    dark_palette.setColor(QPalette.Button, QColor(60, 60, 60))
    dark_palette.setColor(QPalette.ButtonText, Qt.white)
    dark_palette.setColor(QPalette.BrightText, Qt.red)
    dark_palette.setColor(QPalette.Link, QColor(42, 130, 218))
    dark_palette.setColor(QPalette.Highlight, QColor(42, 130, 218))
    dark_palette.setColor(QPalette.HighlightedText, Qt.black)
    app.setPalette(dark_palette)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    apply_dark_theme(app)
    window = DarkSoulsGuideApp()
    window.show()
    sys.exit(app.exec())